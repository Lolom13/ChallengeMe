security:
    encoders:
        Querdos\ChallengeMe\AdministratorBundle\Entity\Administrator:
            algorithm:  bcrypt
            cost:       12

        Querdos\ChallengeMe\AdministratorBundle\Entity\Moderator:
            algorithm:  bcrypt
            cost:       12

        Querdos\ChallengeMe\AdministratorBundle\Entity\Redactor:
            algorithm:  bcrypt
            cost:       12

        Symfony\Component\Security\Core\User\User:
            algorithm:  bcrypt
            cost:       12

    providers:
        chain_provider:
            chain:
                providers: [administrator_provider, moderator_provider, redactor_provider]

        administrator_provider:
            id: challengeme.provider.admin
        moderator_provider:
            id: challengeme.provider.moderator
        redactor_provider:
            id: challengeme.provider.redactor

    role_hierarchy:
        ROLE_REDACTOR:      [ROLE_USER]
        ROLE_MODERATOR:     [ROLE_USER, ROLE_REDACTOR]
        ROLE_ADMIN:         [ROLE_USER, ROLE_MODERATOR, ROLE_REDACTOR]
        ROLE_SUPER_ADMIN:   [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall for the login route
        login_firewall:
            pattern: ^/(.*)/(.*)/login$
            anonymous: ~

        # Firewall for the restricted area - Admin
        admin_firewall:
            pattern:                  ^/restricted/admin
            provider:                 administrator_provider
            form_login:
                login_path:           /restricted/admin/login
                check_path:           /restricted/admin/login_check
                csrf_token_generator: security.csrf.token_manager
                default_target_path:  admin_homepage
                failure_path:         admin_login
            logout:
                path:                 admin_logout
                target:               admin_login

        moderator_firewall:
            pattern:                  ^/restricted/moderator
            provider:                 moderator_provider
            form_login:
                login_path:           /restricted/moderator/login
                check_path:           /restricted/moderator/login_check
                csrf_token_generator: security.csrf.token_manager
                default_target_path:  moderator_homepage
                failure_path:         moderator_login
            logout:
                path:                 moderator_logout
                target:               moderator_login

        redactor_firewall:
            pattern:                  ^/restricted/redactor
            provider:                 redactor_provider
            form_login:
                login_path:           redactor_login
                check_path:           redactor_login_check
                csrf_token_generator: security.csrf.token_manager
                default_target_path:  redactor_homepage
                failure_path:         redactor_login
            logout:
                path:                 redactor_logout
                target:               redactor_login

        landing_firewall:
            pattern:                  ^/
            anonymous:                ~

    access_control:
        - { path: ^/(.*)/login,             roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/,                       roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/restricted/admin,       roles: ROLE_ADMIN }
        - { path: ^/restricted/redactor,    roles: ROLE_REDACTOR }
        - { path: ^/restricted/moderator,   roles: ROLE_MODERATOR }
